{"version":3,"file":"js/768.f80dfc39.js","mappings":"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","sources":["webpack://omp/./src/service/equipment.js","webpack://omp/./src/components/table/equipmentTable.vue","webpack://omp/./src/components/table/equipmentTable.vue?4333","webpack://omp/./src/components/dialog/equipmentFormDialog.vue","webpack://omp/./src/components/dialog/equipmentFormDialog.vue?10c6","webpack://omp/./src/views/EquipmentList.vue","webpack://omp/./src/views/EquipmentList.vue?244d"],"sourcesContent":["import { $admin } from \"./axios.js\";\n\n// 设备列表\nfunction getEquipmentList(params) {\n    return $admin().get(`/api/Device`, { params });\n}\n// 添加设备\nfunction addEquipment(data) {\n    return $admin().post(`/api/Device`, data);\n}\n// 编辑设备\nfunction editEquipment(data) {\n    return $admin().put(`/api/Device`, data);\n}\n// 获取设备详情\nfunction editEquipmentId(deviceId) {\n    return $admin().get(`/api/Device/${deviceId}`);\n}\n\nexport { getEquipmentList, addEquipment, editEquipment, editEquipmentId };\n","<template>\n    <el-table class=\"m-table\" :data=\"state.data\" border fit style=\"width: 100%\">\n        <el-table-column prop=\"deviceId\" label=\"设备ID\" />\n        <el-table-column prop=\"deviceName\" label=\"硬件名称\" />\n        <el-table-column prop=\"orgzName\" label=\"归属企业\" />\n        <el-table-column prop=\"hard_version\" label=\"硬件版本\" />\n        <el-table-column prop=\"soft_version\" label=\"固件版本\" />\n        <el-table-column prop=\"iccid\" label=\"ICCID\" />\n        <el-table-column prop=\"status\" label=\"连接状态\" />\n        <el-table-column label=\"操作\" width=\"180\" v-if=\"hasOperate\">\n            <template #default=\"scope\">\n                <div class=\"u-table-button\">\n                    <el-button link type=\"primary\" size=\"small\" @click=\"handelClick(scope.row)\" v-if=\"hasEdit\"\n                        >编辑</el-button\n                    >\n                    <router-link\n                        :to=\"{ path: `/${label}/details/${scope.row.deviceId}` }\"\n                        class=\"u-table-more\"\n                        v-if=\"hasInfo\"\n                        >查看详情\n                    </router-link>\n                </div>\n            </template>\n        </el-table-column>\n    </el-table>\n</template>\n<script setup>\nimport { defineProps, defineEmits, watch, reactive, computed } from \"vue\";\nimport { deepBerryStore } from \"@/store/index\";\nimport { storeToRefs } from \"pinia\";\n\n//====== 数据 ======\n// props\nconst props = defineProps({\n    table: Array,\n    label: String,\n});\nconst emit = defineEmits([\"toDialog\"]);\n\n// store\nconst store = deepBerryStore();\nconst { role } = storeToRefs(store);\n\n// 权限判断\n// 编辑权限\nconst hasEdit = computed(() => role.value.includes(21));\n// 查看详情权限\nconst hasInfo = computed(() => role.value.includes(20));\n// 操作权限\nconst arr = [20, 21];\nconst hasOperate = computed(() => role.value.map((item) => arr.includes(item)).filter(Boolean).length);\n\n// 表格data数据\nlet state = reactive({\n    data: [],\n});\n\n// 监控表格数据\nwatch(\n    props,\n    (obj) => {\n        state.data = obj.table;\n    },\n    { deep: true }\n);\n\n//====== 交互 ======\n// 提交企业id和弹窗类型\nfunction handelClick(row, type) {\n    emit(\"toDialog\", { row, type });\n}\n</script>\n<style lang=\"less\" scoped>\n@import \"@/assets/css/components/table.less\";\n</style>\n","import script from \"./equipmentTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./equipmentTable.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./equipmentTable.vue?vue&type=style&index=0&id=09ac1752&lang=less&scoped=true\"\n\nimport exportComponent from \"/home/runner/work/omp/omp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-09ac1752\"]])\n\nexport default __exports__","<template>\n    <div>\n        <el-dialog\n            v-model=\"dialogShow\"\n            :title=\"obj.dialogTitle\"\n            :width=\"obj.dialogWidth\"\n            :before-close=\"resetForm\"\n            draggable\n        >\n            <el-form class=\"m-form-content\" ref=\"formRef\" :model=\"state.form\" :rules=\"rules\" label-width=\"120px\">\n                <el-form-item label=\"设备ID\" prop=\"deviceId\">\n                    <el-input v-model=\"state.form.DeviceId\" />\n                </el-form-item>\n                <el-form-item label=\"硬件名称\" prop=\"deviceName\">\n                    <el-input v-model=\"state.form.Name\" />\n                </el-form-item>\n                <el-form-item label=\"归属客户\" prop=\"orgzId\">\n                    <el-input v-model=\"state.form.Orgzid\" />\n                </el-form-item>\n            </el-form>\n            <template #footer>\n                <span v-if=\"obj.dialogIsFooter\" class=\"dialog-footer\">\n                    <el-button @click=\"resetForm\">{{ obj.dialogCloseBtnText }}</el-button>\n                    <el-button type=\"primary\" @click=\"submitForm(formRef)\">{{ obj.dialogSuccessBtnText }}</el-button>\n                </span>\n            </template>\n        </el-dialog>\n    </div>\n</template>\n<script setup>\nimport { defineProps, defineEmits, computed, reactive, ref, watch } from \"vue\";\n//====== 数据 ======\n\n// props\nconst props = defineProps({\n    dialogObject: Object,\n});\nconst emit = defineEmits();\n\n// 弹窗显示\nconst dialogShow = computed({\n    get() {\n        return props.dialogObject.dialogVisible;\n    },\n    set(val) {\n        return val;\n    },\n});\n\n// dialog默认显示\nconst obj = computed(() => {\n    return {\n        dialogTitle: props.dialogObject.title || \"设备信息\",\n        dialogWidth: props.dialogObject.width || \"760px\",\n        dialogCloseBtnText: props.dialogObject.closeBtnText || \"取消\",\n        dialogSuccessBtnText: props.dialogObject.successBtnText || \"成功\",\n        dialogIsFooter: props.dialogObject.isFooter || true,\n        dialogContent: props.dialogObject.content || \"是否停用\",\n    };\n});\n\n// 表单\nconst equipment = computed(() => props.dialogObject.equipment);\nlet state = reactive({\n    form: {},\n});\n\n// 表单规则\nconst formRef = ref(\"\");\nconst rules = ref({\n    DeviceId: [{ required: true, message: \"请选择企业\", trigger: \"blur\" }],\n    Name: [{ required: true, message: \"请输入设备名称\", trigger: \"blur\" }],\n    Orgzid: [{ required: true, message: \"请输入设备ID\", trigger: \"blur\" }],\n});\n\n// 监控传入值 form内容显示编辑或新建\nwatch(equipment, (obj) => (state.form = obj), { deep: true, immediate: true });\n\n//====== 交互 ======\n\n// 关闭并重置校验\nconst resetForm = () => {\n    emit(\"dialogClose\");\n    formRef.value.resetFields();\n};\n\n// 校验并提交\nconst submitForm = (form) => {\n    if (!form) return;\n    form.validate((valid, fields) => {\n        if (valid) {\n            emit(\"dialogSuccess\", state.form);\n        } else {\n            console.log(\"error submit!\", fields);\n        }\n    });\n};\n</script>\n<script>\nexport default {\n    emits: [\"dialogClose\", \"dialogSuccess\"],\n};\n</script>\n<style lang=\"less\">\n@import \"@/assets/css/components/dialog.less\";\n</style>\n","import script from \"./equipmentFormDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./equipmentFormDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./equipmentFormDialog.vue?vue&type=style&index=0&id=40b9e6c6&lang=less\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!--\n * @Author: iRuxu\n * @Date: 2022-06-20 18:07:22\n * @LastEditTime: 2022-06-20 18:58:39\n * @Description:设备管理\n-->\n<template>\n    <div class=\"v-equipment v-page\">\n        <!-- 搜索 -->\n        <div class=\"m-search-box\">\n            <search-bar :data=\"equipment_data\" @toSearch=\"onToSearch\" />\n            <el-button class=\"u-add\" type=\"primary\" @click=\"onToDialog({ type: 'add' })\" v-if=\"hasAdd\"\n                >添加设备</el-button\n            >\n        </div>\n        <!-- 表单 -->\n        <equipmentTable :table=\"state.table\" :label=\"label\" @toDialog=\"onToDialog\" v-loading=\"state.loading\" />\n        <!-- 分页 -->\n        <commonPagination :pagination=\"state.pagination\" @toParams=\"onToParams\" />\n        <!-- 创建/编辑 弹窗 -->\n        <equipmentFormDialog\n            class=\"m-form\"\n            :dialog-object=\"dialogObject\"\n            @dialogClose=\"onDialogClose\"\n            @dialogSuccess=\"onFormSuccess\"\n        />\n    </div>\n</template>\n\n<script setup>\nimport { reactive, computed, onMounted } from \"vue\";\nimport { deepBerryStore } from \"@/store/index\";\nimport equipmentTable from \"@/components/table/equipmentTable\";\nimport equipmentFormDialog from \"@/components/dialog/equipmentFormDialog\";\nimport { getEquipmentList, addEquipment, editEquipment } from \"@/service/equipment\";\nimport { ElNotification } from \"element-plus\";\nimport { storeToRefs } from \"pinia\";\n\n//====== 数据 ======\n\n// 获取公共数据\nconst store = deepBerryStore();\nconst { label, role } = storeToRefs(store);\n\n// 搜索 默认选项数据\nconst equipment_data = {\n    uid: \"\",\n    placeholder: `请输入设备ID/硬件名称/ICCID/归属客户`,\n    // bind_title: \"-- 绑定状态 --\",\n    // bind: [\n    //     {\n    //         label: \"已绑定\",\n    //         value: 1,\n    //     },\n    //     {\n    //         label: \"未绑定\",\n    //         value: 0,\n    //     },\n    // ],\n    // connect_title: \"-- 连接状态 --\",\n    // connect: [\n    //     {\n    //         label: \"在线\",\n    //         value: 1,\n    //     },\n    //     {\n    //         label: \"离线\",\n    //         value: 0,\n    //     },\n    // ],\n};\n\n// 表格 翻页 企业id 企业名称 弹窗表格\nlet state = reactive({\n    loading: false,\n    table: [],\n    pagination: {\n        page: 1,\n        per: 20,\n        total: 0,\n    },\n    search: {\n        Condition: null,\n    },\n    form: {},\n});\n\n// axios查询数据\nconst params = computed(() => {\n    return {\n        pageIndex: state.pagination.page - 1,\n        pageSize: state.pagination.per,\n        ...state.search,\n    };\n});\n\n// 默认表单\nconst equipment = {};\n\n// 弹窗\nlet dialogObject = reactive({\n    dialogVisible: false,\n    equipment: equipment,\n});\n\n// 添加设备权限判断\nconst hasAdd = computed(() => role.value.includes(19));\n\n//====== 交互 ======\n\n// 搜索查询\nfunction onToSearch({ input_txt }) {\n    state.search.Condition = input_txt;\n    // state.search.status = status_id == -1 ? null : status_id;\n    state.pagination.page = 1;\n    loadEquipmentList();\n}\n\n// 翻页页码并搜索新的列表\nfunction onToParams(e) {\n    state.pagination.page = e;\n    loadEquipmentList();\n}\n\n// 关闭弹窗\nconst onDialogClose = () => {\n    dialogObject.dialogVisible = false;\n};\n\n// 打开弹窗\nfunction onToDialog({ row, type }) {\n    dialogObject.dialogVisible = true;\n    const _row = row ? row : equipment;\n    if (type == \"add\") _row.add = true;\n    dialogObject.equipment = _row;\n}\n\nconst onFormSuccess = (form) => {\n    dialogObject.dialogVisible = false;\n    if (form.add) {\n        delete form.add;\n        addEquipment(form).then(() => {\n            ElNotification({\n                title: \"成功\",\n                message: \"添加设备成功\",\n                type: \"success\",\n            });\n        });\n    } else {\n        editEquipment(form).then(() => {\n            ElNotification({\n                title: \"成功\",\n                message: \"修改设备信息成功\",\n                type: \"success\",\n            });\n        });\n    }\n};\n\n//====== axios数据 ======\n\n// 初始加载\nonMounted(() => loadEquipmentList());\n\n// 获取成员列表\nfunction loadEquipmentList() {\n    state.loading = true;\n    getEquipmentList(params.value)\n        .then((res) => {\n            if (res.status == \"200\") {\n                const data = res.data.data;\n                state.table = data.datas;\n                state.pagination.total = data.totalCount;\n            }\n        })\n        .finally(() => (state.loading = false));\n}\n</script>\n","import script from \"./EquipmentList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EquipmentList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getEquipmentList","params","$admin","get","addEquipment","data","post","editEquipment","put","editEquipmentId","deviceId","store","deepBerryStore","role","storeToRefs","hasEdit","computed","value","includes","hasInfo","arr","hasOperate","map","item","filter","Boolean","length","state","reactive","handelClick","row","type","emit","watch","props","obj","table","deep","__exports__","emits","dialogShow","dialogObject","dialogVisible","set","val","dialogTitle","title","dialogWidth","width","dialogCloseBtnText","closeBtnText","dialogSuccessBtnText","successBtnText","dialogIsFooter","isFooter","dialogContent","content","equipment","form","formRef","ref","rules","DeviceId","required","message","trigger","Name","Orgzid","immediate","resetForm","resetFields","submitForm","validate","valid","fields","console","log","label","equipment_data","uid","placeholder","loading","pagination","page","per","total","search","Condition","pageIndex","pageSize","hasAdd","onToSearch","input_txt","loadEquipmentList","onToParams","e","onDialogClose","onToDialog","_row","add","onFormSuccess","then","ElNotification","res","status","datas","totalCount","finally","onMounted"],"sourceRoot":""}