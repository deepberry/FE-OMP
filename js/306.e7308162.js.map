{"version":3,"file":"js/306.e7308162.js","mappings":"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","sources":["webpack://omp/./src/components/detail/companyDetail.vue","webpack://omp/./src/components/detail/companyDetail.vue?9601","webpack://omp/./src/components/detail/customerDetail.vue","webpack://omp/./src/components/detail/customerDetail.vue?f3db","webpack://omp/./src/components/detail/equipmentDetail.vue","webpack://omp/./src/components/detail/equipmentDetail.vue?01ea","webpack://omp/./src/service/index.js","webpack://omp/./src/components/detail/roleDetail.vue","webpack://omp/./src/components/detail/roleDetail.vue?6e7c","webpack://omp/./src/components/detail/nodeDetail.vue","webpack://omp/./src/components/detail/nodeDetail.vue?d55f","webpack://omp/./src/components/detail/commonLogs.vue","webpack://omp/./src/components/detail/commonLogs.vue?1ca0","webpack://omp/./src/views/DetailsPage.vue","webpack://omp/./src/views/DetailsPage.vue?21d6"],"sourcesContent":["<template>\n    <div class=\"m-detail m-company-detail\" v-loading=\"state.loading\">\n        <div class=\"m-info\">\n            <span class=\"u-login\" @click=\"onceLogin('new')\">一次性登录(新版)</span>\n            <span class=\"u-login\" @click=\"onceLogin('old')\">一次性登录(旧版)</span>\n            <div class=\"m-row\" v-for=\"(item, k) in state.info\" :key=\"k\">\n                <template v-if=\"k == 'orgzLogo'\">\n                    <span class=\"u-label\">{{ toName[k] }}</span>\n                    <img :src=\"item\" />\n                </template>\n                <template v-else-if=\"k == 'items'\">\n                    <span class=\"u-label\">{{ toName[k] }}</span>\n                    <div class=\"u-info-items\">\n                        <div class=\"u-item\" v-for=\"(user, i) in item\" :key=\"i\">\n                            <span>状态：{{ user.enabled }}</span>\n                            <span>姓名：{{ user.userName || \"-\" }}</span>\n                            <span>用户帐号：{{ user.accountName || \"-\" }}</span>\n                            <span>手机号码：{{ user.phoneNum || \"-\" }}</span>\n                        </div>\n                    </div>\n                </template>\n                <template v-else>\n                    <span class=\"u-label\">{{ toName[k] }}</span>\n                    <span class=\"u-value\">{{ item || \"-\" }}</span>\n                </template>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\nimport { getCompanyInfo, loginOrgzOnce } from \"@/service/company\";\nimport { useRoute } from \"vue-router\";\nimport { onMounted, reactive } from \"vue\";\n//====== 数据 ======\n\n// 路由传值\nconst route = useRoute();\nconst { id } = route.params;\nlet state = reactive({\n    info: {},\n    loading: false,\n});\n\n// 字段替换中文\nconst toName = {\n    createAt: \"创建时间\",\n    organizationId: \"企业ID\",\n    orgzLogo: \"企业LOGO\",\n    orgzName: \"企业名称\",\n    accountName: \"企业主账号\",\n    phoneNum: \"企业负责人手机\",\n    status: \"企业状态\",\n    contact: \"企业负责人\",\n    items: \"企业成员\",\n};\n\n//====== axios数据 ======\n\n// 初始加载\nonMounted(() => {\n    state.loading = true;\n    getCompanyInfo(id)\n        .then((res) => {\n            let info = res.data.data;\n            delete info.userId;\n            state.info = info;\n        })\n        .finally(() => (state.loading = false));\n});\n// 一次性登录\nfunction onceLogin(key) {\n    const link = key == \"new\" ? \"https://titan.deepberry.cn\" : \"https://io.deepberry.cn\";\n    loginOrgzOnce(id).then((res) => {\n        const token = res.data.data.accessToken;\n        window.open(`${link}/login?token=${token}`, \"_blank\");\n    });\n}\n</script>\n","import script from \"./companyDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./companyDetail.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"m-detail m-customer-detail\" v-loading=\"state.loading\">\n        <div class=\"m-info\">\n            <div class=\"m-row\" v-for=\"(item, key) in info\" :key=\"key\">\n                <span class=\"u-label\">{{ item }}</span>\n                <span class=\"u-value\">{{ state.data[key] }}</span>\n            </div>\n        </div>\n        <div class=\"m-info\">\n            <div class=\"u-title\">用户所在组织信息</div>\n            <el-table\n                class=\"m-table\"\n                :data=\"state.data.items\"\n                border\n                row-key=\"orgzId\"\n                style=\"width: 100%\"\n                :cell-style=\"{ borderColor: '#787878', textAlign: 'center' }\"\n                :header-cell-style=\"{ borderColor: '#787878', textAlign: 'center' }\"\n            >\n                <el-table-column prop=\"orgzId\" label=\"所在企业ID\" width=\"180\" />\n                <el-table-column prop=\"orgzName\" label=\"所在企业名称\" />\n                <el-table-column prop=\"userName\" label=\"姓名\" />\n                <el-table-column prop=\"role\" label=\"所属角色\" />\n            </el-table>\n        </div>\n    </div>\n</template>\n<script setup>\nimport { useRoute } from \"vue-router\";\nimport { onMounted, reactive, toRaw } from \"vue\";\nimport { getCustomerInfo } from \"@/service/customer\";\n//====== 数据 ======\n// 路由传值\nconst route = useRoute();\nconst { id } = toRaw(route).params.value;\n// 数据\nlet state = reactive({\n    data: {},\n    loading: false,\n});\n\n// 自定\nconst info = {\n    userId: \"用户ID\",\n    accountName: \"用户帐号\",\n    phoneNum: \"手机号码\",\n    status: \"用户帐号状态\",\n    updateAt: \"最新登录时间\",\n};\n\n//======  axios ======\n// 初始加载\nonMounted(() => {\n    state.loading = true;\n    getCustomerInfo(id)\n        .then((res) => {\n            state.data = res.data.data;\n        })\n        .finally(() => (state.loading = false));\n});\n</script>\n","import script from \"./customerDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./customerDetail.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"m-detail m-equipment-detail\" v-loading=\"state.loading\">\n        <!-- 设备信息 -->\n        <div class=\"m-card\">\n            <div class=\"m-info\">\n                <div class=\"m-row\" v-for=\"(item, key) in info\" :key=\"key\">\n                    <span class=\"u-label\">{{ item }}</span>\n                    <span class=\"u-value\">{{ state.data[key] || \"-\" }}</span>\n                </div>\n            </div>\n            <div class=\"m-info\">\n                <div class=\"m-row\" v-for=\"(item, key) in network\" :key=\"key\">\n                    <span class=\"u-label\">{{ item }}</span>\n                    <span class=\"u-value\">{{ state.data[key] }}</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"m-card m-noBackground\">\n            <!-- 设备追踪 -->\n            <div class=\"m-info\">\n                <div class=\"u-title\">设备跟踪记录</div>\n                <el-timeline>\n                    <el-timeline-item\n                        :timestamp=\"item.createTime\"\n                        placement=\"top\"\n                        color=\"#047de0\"\n                        v-for=\"(item, key) in state.trackList\"\n                        :key=\"key\"\n                    >\n                        <el-card>\n                            <p class=\"u-time\">\n                                <span>{{ item.createTime }}</span> <b>{{ item.creator }}</b>\n                            </p>\n                            <p class=\"u-title\">{{ item.information }}</p>\n                        </el-card>\n                    </el-timeline-item>\n                </el-timeline>\n            </div>\n            <!-- 设备绑定人员 -->\n            <div class=\"m-info\">\n                <div class=\"u-title\">用户列表</div>\n                <el-table\n                    class=\"m-table\"\n                    :data=\"state.data.users\"\n                    border\n                    row-key=\"userId\"\n                    style=\"width: 100%; max-width: 1000px\"\n                    :cell-style=\"{ borderColor: '#787878', textAlign: 'center' }\"\n                    :header-cell-style=\"{ borderColor: '#787878', textAlign: 'center' }\"\n                >\n                    <el-table-column prop=\"userId\" label=\"ID\" width=\"80\" />\n                    <el-table-column label=\"用户账号\">\n                        <template #default=\"scope\">\n                            {{ scope.row.accountName ? scope.row.accountName : \"-\" }}\n                        </template>\n                    </el-table-column>\n                    <el-table-column prop=\"userName\" label=\"姓名\" />\n                    <el-table-column label=\"手机号码\">\n                        <template #default=\"scope\">\n                            {{ scope.row.phone ? scope.row.phone : \"-\" }}\n                        </template>\n                    </el-table-column>\n                    <el-table-column prop=\"role\" label=\"用户角色\" />\n                </el-table>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\nimport { getEquipmentId, getEquipmentTrack } from \"@/service/equipment\";\nimport { useRoute } from \"vue-router\";\nimport { onMounted, reactive, toRaw } from \"vue\";\n//====== 数据 ======\n// 路由传值\nconst route = useRoute();\nconst { id } = toRaw(route).params.value;\n// 数据\nlet state = reactive({\n    data: {},\n    loading: false,\n    trackList: [],\n});\n\n//======  axios ======\n// 初始加载\nonMounted(() => {\n    state.loading = true;\n    getEquipmentId(id)\n        .then((res) => {\n            const data = res.data.data;\n            let list = [[], [], []];\n            data.users.forEach((item) => {\n                switch (item.role) {\n                    case \"超级管理员\":\n                        list[0].push(item);\n                        break;\n                    case \"管理员\":\n                        list[1].push(item);\n                        break;\n                    default:\n                        list[2].push(item);\n                        break;\n                }\n            });\n            data.users = [...list[0], ...list[1], ...list[2]];\n            state.data = data;\n        })\n        .finally(() => (state.loading = false));\n\n    getEquipmentTrack(id).then((res) => {\n        const list = res.data.data;\n        state.trackList = list.length ? list : [{ createTime: null, information: \"暂无设备追踪记录\" }];\n    });\n});\n\n// 自定\nconst info = {\n    deviceId: \"设备ID\",\n    deviceType: \"设备类型\",\n    orgzName: \"归属客户\",\n    hardVer: \"硬件版本\",\n    softVer: \"固件版本\",\n    value: \"绑定状态\",\n    name: \"备注\",\n};\n// 自定\nconst network = {\n    iccid: \"ICCID\",\n    createAt: \"创建时间\",\n    updateAd: \"最后更新\",\n};\n</script>\n","import script from \"./equipmentDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./equipmentDetail.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { $admin } from \"./axios.js\";\n\nfunction getWorkUser() {\n    return $admin().get(`/api/Work/userInfo`);\n}\nfunction getUserLogin(code) {\n    return $admin().get(`/api/Work/login${code}`);\n}\nfunction getUserPermission(userId) {\n    return $admin().get(`/api/Manage/user/${userId}/permission`);\n}\n\nexport { getWorkUser, getUserPermission, getUserLogin };\n","<template>\n    <div class=\"m-detail m-customer-detail\" v-loading=\"state.loading\">\n        <div class=\"m-info\">\n            <div class=\"m-row m-row-user\">\n                <img class=\"u-info-avatar\" :src=\"state.data.avatar\" :alt=\"state.data.name\" />{{\n                    state.data.name || \"-\"\n                }}\n            </div>\n            <div class=\"m-row\">\n                <span class=\"u-label\">userId</span>\n                <span class=\"u-value\">{{ state.data.userId || \"-\" }}</span>\n            </div>\n            <div class=\"m-row\">\n                <span class=\"u-label\">手机</span>\n                <span class=\"u-value\">{{ state.data.mobile || \"-\" }}</span>\n            </div>\n            <div class=\"m-row\">\n                <span class=\"u-label\">邮箱</span>\n                <span class=\"u-value\">{{ state.data.email || \"-\" }}</span>\n            </div>\n            <div class=\"m-row\">\n                <span class=\"u-label\">创建时间</span>\n                <span class=\"u-value\">{{ state.data.updatedAt || \"-\" }}</span>\n            </div>\n            <div class=\"m-row\">\n                <span class=\"u-label\">账号状态</span>\n                <span class=\"u-value\">{{ state.data.disabled == \"0\" ? \"正常\" : \"停用\" }}</span>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\nimport { getWorkUser, getUserPermission, getUserLogin } from \"@/service/index\";\nimport { onMounted, reactive, ref } from \"vue\";\nimport { storeToRefs } from \"pinia\";\nimport { deepBerryStore } from \"@/store\";\n\n//====== 数据 ======\n// 数据\nlet state = reactive({\n    data: {},\n    loading: false,\n});\nconst store = deepBerryStore();\nlet { role } = storeToRefs(store);\n\n// 获取code数据\nconst code = ref(document.location.search.split(\"&\")[0]);\n\n//======  axios ======\n// 初始加载\n\nonMounted(() => {\n    state.loading = true;\n    if (localStorage.getItem(\"token\")) {\n        let token = localStorage.getItem(\"token\");\n        if (token.indexOf(\"Bearer\") == -1) {\n            token = \"Bearer \" + token;\n            localStorage.setItem(\"token\", token);\n        }\n        getWorkUser()\n            .then((res) => {\n                state.data = res.data.data;\n                console.log(\"获取个人信息：\", state.data);\n                getUserPermission(res.data.data.userId).then((res) => {\n                    role = res.data.data;\n                    store.role = role;\n                    console.log(\"获取权限：\", role);\n                });\n            })\n            .catch(() => {\n                localStorage.removeItem(\"token\");\n                location.reload();\n            })\n            .finally(() => {\n                state.loading = false;\n            });\n    } else {\n        getUserLogin(code.value)\n            .then((res) => {\n                const _code = \"Bearer \" + res.data.data.accessToken;\n                localStorage.setItem(\"token\", _code);\n                location.reload();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                state.loading = false;\n            });\n    }\n});\n</script>\n","import script from \"./roleDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./roleDetail.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"m-detail m-node-detail\">\n        <template v-if=\"list && list.length\">\n            <div class=\"m-node-props\">\n                <!-- <div class=\"u-title\">节点： {{ item.name }}</div> -->\n                <div v-for=\"(element, k) in list\" :key=\"k\" class=\"m-node-prop\">\n                    <div class=\"u-prop-header\">\n                        <!-- 图标 -->\n                        <i class=\"u-prop-icon\" v-if=\"typesWhichHaveIcon.includes(element.type)\">\n                            <img\n                                :src=\"\n                                    element.type == 'CAMERA'\n                                        ? getIconUrl('camera')\n                                        : getIconUrl(element.icon || 'default')\n                                \"\n                                :alt=\"element.name\"\n                                @error=\"loadDefaultIcon(element)\"\n                            />\n                        </i>\n                        <!-- 名称 -->\n                        <span class=\"u-prop-name\">{{ element.displayName }}</span>\n                    </div>\n                    <!-- 数据 -->\n                    <div class=\"u-prop-data\">\n                        <div class=\"u-prop-switch\">\n                            <el-switch\n                                v-if=\"element.type == 'SWITCH'\"\n                                v-model=\"element.value\"\n                                active-value=\"true\"\n                                inactive-value=\"false\"\n                                disabled\n                            />\n                        </div>\n                        <div class=\"u-prop-value\" v-if=\"element.type == 'INPUT'\">\n                            <b>{{ element.value || 0 }}</b> {{ element.unit }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </template>\n        <div class=\"m-no-node\" v-else>\n            <el-alert title=\"暂无节点数据\" type=\"info\" show-icon center :closable=\"false\" />\n        </div>\n    </div>\n</template>\n<script setup>\nimport { onMounted, ref } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport { getNodes } from \"@/service/equipment\";\nimport { getCdnLink } from \"@deepberry/common/js/utils\";\n// 路由传值\nconst route = useRoute();\nconst { id } = route.params;\nconst list = ref([]);\nconst typesWhichHaveIcon = ref([\"INPUT\", \"CAMERA\"]);\n\n// 获取节点属性\nconst loadNodes = () => {\n    getNodes(id).then((res) => {\n        list.value = res.data.data.nodeProperies || [];\n    });\n};\n\n// 旧废弃图标兼容\nconst loadDefaultIcon = (prop) => {\n    prop.icon = \"default\";\n};\nconst getIconUrl = (icon = \"default\") => {\n    return getCdnLink(`img/common/node-props/${icon}.svg`);\n};\n\nonMounted(() => {\n    loadNodes();\n});\n</script>\n<style scoped lang=\"less\">\n@import \"~@/assets/css/components/node.less\";\n</style>\n","import script from \"./nodeDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./nodeDetail.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./nodeDetail.vue?vue&type=style&index=0&id=23a2cb8e&scoped=true&lang=less\"\n\nimport exportComponent from \"/home/runner/work/omp/omp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-23a2cb8e\"]])\n\nexport default __exports__","<template>\n    <div class=\"m-detail m-commonLogs\" v-if=\"type == 'equipment'\">\n        <el-table class=\"m-table\" :data=\"table_data\" border style=\"width: 100%\">\n            <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\" />\n            <el-table-column label=\"操作者\" width=\"180\">\n                <template #default=\"scope\">\n                    <span> {{ scope.row.userName ? scope.row.userName + \" / 用户ID：\" + scope.row.userId : \"-\" }}</span\n                    ><br />\n                    <span v-if=\"scope.row.operationTypeId\">平台用户ID：{{ scope.row.operationTypeId }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"operationTypeName\" label=\"行为\" />\n            <!-- <el-table-column prop=\"address\" label=\"对象类型\" />\n            <el-table-column prop=\"address\" label=\"对象\" /> -->\n            <el-table-column prop=\"operationDetail\" label=\"详情记录\" />\n        </el-table>\n    </div>\n</template>\n<script setup>\nimport { defineProps, computed } from \"vue\";\nconst props = defineProps({\n    data: Array,\n    type: String,\n});\nconsole.log(props.type);\n\nconst table_data = computed(() => props.data);\n</script>\n","import script from \"./commonLogs.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./commonLogs.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"m-details v-page\">\n        <!-- tab切换 -->\n        <el-tabs v-model=\"activeName\" class=\"m-tabs\">\n            <el-tab-pane :label=\"`${key_name}信息`\" name=\"info\"></el-tab-pane>\n            <el-tab-pane :label=\"`${key_name}操作日志`\" name=\"logs\" v-if=\"hasLogs\"></el-tab-pane>\n            <el-tab-pane label=\"节点属性\" name=\"node\" v-if=\"hasNode\"></el-tab-pane>\n        </el-tabs>\n        <component :is=\"state.component\" :type=\"type\" :data=\"state.data\"></component>\n        <commonPagination v-if=\"hasLogs\" :pagination=\"state.pagination\" />\n    </div>\n</template>\n<script setup>\nimport { reactive, markRaw, toRaw, ref, watch } from \"vue\";\nimport { deepBerryStore } from \"@/store/index\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport companyDetail from \"@/components/detail/companyDetail.vue\";\nimport customerDetail from \"@/components/detail/customerDetail.vue\";\nimport equipmentDetail from \"@/components/detail/equipmentDetail.vue\";\nimport roleDetail from \"@/components/detail/roleDetail.vue\";\nimport nodeDetail from \"@/components/detail/nodeDetail.vue\";\nimport commonLogs from \"@/components/detail/commonLogs.vue\";\n\nimport { getEquipmentLogs } from \"@/service/equipment\";\n\nconst store = deepBerryStore();\nconst route = useRoute();\nconst router = reactive(useRouter());\nconst { type, id } = toRaw(route).params.value;\nconst key_name = ref(store.data[type]?.key_name);\n\n// tabs切换name\nconst activeName = ref(\"info\");\nconst routeType = ref(type);\n\n// 自定义数据\nconst state = reactive({\n    pagination: {\n        page: 1,\n        per: 20,\n        total: 0,\n    },\n\n    data: [],\n    component_name: \"commonLogs\",\n    component: null,\n\n    params: {\n        PageNumber: 1,\n        PageSize: 10,\n        deviceId: id,\n    },\n});\n\n// 动态组件\nconst myComponent = reactive({\n    companyDetail: markRaw(companyDetail),\n    customerDetail: markRaw(customerDetail),\n    equipmentDetail: markRaw(equipmentDetail),\n    roleDetail: markRaw(roleDetail),\n    commonLogs: markRaw(commonLogs),\n    nodeDetail: markRaw(nodeDetail),\n});\n\n// 是否有记录日志\nconst hasLogs = ref(true);\n\n// 是否有节点属性\nconst hasNode = ref(false);\n\n// 获取设备日志\nconst equipmentLogs = () => {\n    hasLogs.value = true;\n    hasNode.value = true;\n    getEquipmentLogs(state.params).then((res) => {\n        state.data = res.data.data.datas;\n    });\n};\n\n// 监控tab切换组件\nwatch(\n    activeName,\n    (val) => {\n        if (val == \"node\") {\n            state.component_name = ref(`nodeDetail`);\n        } else {\n            state.component_name = val == \"logs\" ? ref(\"commonLogs\") : ref(`${routeType.value}Detail`);\n        }\n\n        state.component = myComponent[state.component_name];\n    },\n    { deep: true, immediate: true }\n);\nwatch(\n    router,\n    (val) => {\n        // 是否显示日志tab\n        // hasLogs.value = true;\n        hasLogs.value = false;\n        activeName.value = \"info\";\n\n        const _type = val.currentRoute.params.type;\n        routeType.value = _type;\n\n        if (_type == \"company\" || _type == \"role\") hasLogs.value = false;\n        if (_type == \"role\") key_name.value = \"账号\";\n        if (_type == \"equipment\") equipmentLogs();\n\n        state.component_name = ref(`${_type}Detail`);\n        state.component = myComponent[state.component_name];\n    },\n    { deep: true, immediate: true }\n);\n</script>\n<style lang=\"less\">\n@import \"@/assets/css/views/details.less\";\n</style>\n","import script from \"./DetailsPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DetailsPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DetailsPage.vue?vue&type=style&index=0&id=76fb398d&lang=less\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["route","useRoute","id","params","state","reactive","info","loading","toName","createAt","organizationId","orgzLogo","orgzName","accountName","phoneNum","status","contact","items","onceLogin","key","link","loginOrgzOnce","then","res","token","data","accessToken","window","open","onMounted","getCompanyInfo","userId","finally","__exports__","toRaw","value","updateAt","getCustomerInfo","trackList","getEquipmentId","list","users","forEach","item","role","push","getEquipmentTrack","length","createTime","information","deviceId","deviceType","hardVer","softVer","name","network","iccid","updateAd","getWorkUser","$admin","get","getUserLogin","code","getUserPermission","store","deepBerryStore","storeToRefs","ref","document","location","search","split","localStorage","getItem","indexOf","setItem","console","log","catch","removeItem","reload","_code","err","typesWhichHaveIcon","loadNodes","getNodes","nodeProperies","loadDefaultIcon","prop","icon","getIconUrl","getCdnLink","props","type","table_data","computed","router","useRouter","key_name","activeName","routeType","pagination","page","per","total","component_name","component","PageNumber","PageSize","myComponent","companyDetail","markRaw","customerDetail","equipmentDetail","roleDetail","commonLogs","nodeDetail","hasLogs","hasNode","equipmentLogs","getEquipmentLogs","datas","watch","val","deep","immediate","_type","currentRoute"],"sourceRoot":""}