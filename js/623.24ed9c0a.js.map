{"version":3,"file":"js/623.24ed9c0a.js","mappings":"yWA+BA,SAASA,EAAYC,GACjBC,EAAK,WAAY,CAAED,O,4+BC1BvB,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,sCC2DA,EAAe,CACXC,MAAO,CAAC,cAAe,kB,4GAjCrBC,GAAaC,EAAAA,EAAAA,IAAS,CACxBC,MACI,OAAOC,EAAMC,aAAaC,eAE9BC,IAAIC,GACA,OAAOA,KAITC,EAAM,CACRC,YAAaN,EAAMC,aAAaM,OAAS,OACzCC,YAAaR,EAAMC,aAAaQ,OAAS,QACzCC,mBAAoBV,EAAMC,aAAaU,cAAgB,KACvDC,qBAAsBZ,EAAMC,aAAaY,gBAAkB,KAC3DC,eAAgBd,EAAMC,aAAac,WAAY,EAC/CC,cAAehB,EAAMC,aAAagB,SAAW,QAG3CC,GAAOC,EAAAA,EAAAA,IAAS,CAClB1B,GAAI,GACJ2B,KAAM,GACNC,KAAM,KAGJC,EAAQ,KACV5B,EAAK,eAAe,EAAO,UAEzB6B,EAAU,KACZ7B,EAAK,iBAAiB,EAAO,Y,myCC1DjC,MAAM,EAAc,EAEpB,Q,qIC2BA,MAAM8B,GAAQC,EAAAA,EAAAA,MACR,MAAEC,EAAF,UAASC,GAAcH,GACvB,MAAEjB,EAAF,KAASqB,GAASD,EAAUD,GAG5BG,EAAiB,CACnBC,IAAK,GACLC,YAAc,0BACdC,WAAY,aACZC,KAAM,CACF,CACIP,MAAO,MACPQ,MAAO,GAEX,CACIR,MAAO,MACPQ,MAAO,IAGfC,cAAe,aACfC,QAAS,CACL,CACIV,MAAO,KACPQ,MAAO,GAEX,CACIR,MAAO,KACPQ,MAAO,KAMbG,EAAQ,CAAC,CAAE5C,GAAI,IAEf6C,GAAanB,EAAAA,EAAAA,IAAS,CACxBoB,KAAM,EACNC,IAAK,EACLC,MAAO,IAIX,SAASC,EAASC,GACdC,QAAQC,IAAIF,EAAG,MAInB,SAASG,GAAW,GAAErD,IAClBQ,EAAaC,eAAgB,EAIjC,MAAMD,GAAekB,EAAAA,EAAAA,IAAS,CAC1BjB,eAAe,IAGb6C,EAAgB,KAClB9C,EAAaC,eAAgB,GAG3B8C,EAAkB,KACpB/C,EAAaC,eAAgB,GAGjC,SAAS+C,IACLhD,EAAaC,eAAgB,E,qoBChGjC,MAAM,EAAc,EAEpB","sources":["webpack://omp/./src/components/table/equipmentTable.vue","webpack://omp/./src/components/table/equipmentTable.vue?4333","webpack://omp/./src/components/dialog/equipmentFormDialog.vue","webpack://omp/./src/components/dialog/equipmentFormDialog.vue?10c6","webpack://omp/./src/views/EquipmentList.vue","webpack://omp/./src/views/EquipmentList.vue?244d"],"sourcesContent":["<template>\n    <el-table class=\"m-table\" :data=\"table\" border style=\"width: 100%\">\n        <el-table-column prop=\"id\" label=\"设备ID\" width=\"180\" />\n        <el-table-column prop=\"name\" label=\"硬件名称\" width=\"180\" />\n        <el-table-column prop=\"address\" label=\"归属客户\" />\n        <el-table-column prop=\"address\" label=\"硬件版本\" />\n        <el-table-column prop=\"address\" label=\"固件版本\" />\n        <el-table-column prop=\"address\" label=\"ICCID\" />\n        <el-table-column prop=\"address\" label=\"剩余流量\" />\n        <el-table-column prop=\"address\" label=\"绑定状态\" />\n        <el-table-column prop=\"address\" label=\"连接状态\" />\n        <el-table-column prop=\"address\" label=\"操作\">\n            <template #default=\"scope\">\n                <div class=\"u-table-button\">\n                    <el-button link type=\"primary\" size=\"small\" @click=\"handelClick(scope.row.id)\">编辑</el-button>\n                    <router-link :to=\"{ path: `/${label}/details/${scope.row.id}` }\" class=\"u-table-more\"\n                        >查看详情\n                    </router-link>\n                </div>\n            </template>\n        </el-table-column>\n    </el-table>\n</template>\n<script setup>\nimport { defineProps, defineEmits } from \"vue\";\nconst props = defineProps({\n    table: Array,\n    label: String,\n});\nconst emit = defineEmits([\"toDialog\"]);\nprops;\nfunction handelClick(id) {\n    emit(\"toDialog\", { id });\n}\n</script>\n<style lang=\"less\" scoped>\n@import \"@/assets/css/components/table.less\";\n</style>\n","import script from \"./equipmentTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./equipmentTable.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./equipmentTable.vue?vue&type=style&index=0&id=1ba1a7bd&lang=less&scoped=true\"\n\nimport exportComponent from \"/home/runner/work/omp/omp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1ba1a7bd\"]])\n\nexport default __exports__","<template>\n    <div>\n        <el-dialog\n            v-model=\"dialogShow\"\n            :title=\"obj.dialogTitle\"\n            :width=\"obj.dialogWidth\"\n            :before-close=\"close\"\n            draggable\n        >\n            <el-form class=\"m-form-content\" :model=\"form\" label-width=\"120px\">\n                <el-form-item label=\"设备ID\">\n                    <el-input v-model=\"form.id\" />\n                </el-form-item>\n                <el-form-item label=\"硬件名称\">\n                    <el-input v-model=\"form.name\" />\n                </el-form-item>\n                <el-form-item label=\"归属客户\">\n                    <el-input v-model=\"form.user\" />\n                </el-form-item>\n            </el-form>\n            <template #footer>\n                <span v-if=\"obj.dialogIsFooter\" class=\"dialog-footer\">\n                    <el-button @click=\"close\">{{ obj.dialogCloseBtnText }}</el-button>\n                    <el-button type=\"primary\" @click=\"success\">{{ obj.dialogSuccessBtnText }}</el-button>\n                </span>\n            </template>\n        </el-dialog>\n    </div>\n</template>\n<script setup>\nimport { defineProps, defineEmits, computed, reactive } from \"vue\";\nconst props = defineProps({\n    dialogObject: Object,\n});\n\nconst dialogShow = computed({\n    get() {\n        return props.dialogObject.dialogVisible;\n    },\n    set(val) {\n        return val;\n    },\n});\nconst emit = defineEmits();\nconst obj = {\n    dialogTitle: props.dialogObject.title || \"设备信息\",\n    dialogWidth: props.dialogObject.width || \"760px\",\n    dialogCloseBtnText: props.dialogObject.closeBtnText || \"取消\",\n    dialogSuccessBtnText: props.dialogObject.successBtnText || \"成功\",\n    dialogIsFooter: props.dialogObject.isFooter || true,\n    dialogContent: props.dialogObject.content || \"是否停用\",\n};\n\nconst form = reactive({\n    id: \"\",\n    name: \"\",\n    user: \"\",\n});\n\nconst close = () => {\n    emit(\"dialogClose\", false, \"close\");\n};\nconst success = () => {\n    emit(\"dialogSuccess\", false, \"success\");\n};\n</script>\n<script>\nexport default {\n    emits: [\"dialogClose\", \"dialogSuccess\"],\n};\n</script>\n<style lang=\"less\">\n@import \"@/assets/css/components/dialog.less\";\n</style>\n","import script from \"./equipmentFormDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./equipmentFormDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./equipmentFormDialog.vue?vue&type=style&index=0&id=6aa1cd8e&lang=less\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!--\n * @Author: iRuxu\n * @Date: 2022-06-20 18:07:22\n * @LastEditTime: 2022-06-20 18:58:39\n * @Description:设备管理\n-->\n<template>\n    <div class=\"v-equipment\">\n        <!-- 标题 -->\n        <h2 class=\"m-title\"><component class=\"u-title-icon\" :is=\"icon\" />{{ title }}</h2>\n        <!-- 搜索 -->\n        <div class=\"m-search-box\">\n            <search-bar :data=\"equipment_data\" @toSearch=\"toSearch\" />\n            <el-button class=\"u-add\" type=\"primary\" @click=\"addEquipment\">添加设备</el-button>\n        </div>\n        <!-- 表单 -->\n        <equipmentTable :table=\"table\" :label=\"label\" @toDialog=\"onToDialog\" />\n        <!-- 分页 -->\n        <commonPagination :pagination=\"pagination\" />\n        <!-- 创建/编辑 弹窗 -->\n        <equipmentFormDialog\n            class=\"m-form\"\n            :dialog-object=\"dialogObject\"\n            @dialogClose=\"onDialogClose\"\n            @dialogSuccess=\"onDialogSuccess\"\n        />\n    </div>\n</template>\n\n<script setup>\nimport { reactive } from \"vue\";\nimport { deepBerryStore } from \"@/store/index\";\nimport equipmentTable from \"@/components/table/equipmentTable\";\nimport equipmentFormDialog from \"@/components/dialog/equipmentFormDialog\";\nconst store = deepBerryStore();\nconst { label, deepBerry } = store;\nconst { title, icon } = deepBerry[label];\n\n// 搜索\nconst equipment_data = {\n    uid: \"\",\n    placeholder: `请输入设备ID/硬件名称/ICCID/归属客户`,\n    bind_title: \"-- 绑定状态 --\",\n    bind: [\n        {\n            label: \"已绑定\",\n            value: 1,\n        },\n        {\n            label: \"未绑定\",\n            value: 0,\n        },\n    ],\n    connect_title: \"-- 连接状态 --\",\n    connect: [\n        {\n            label: \"在线\",\n            value: 1,\n        },\n        {\n            label: \"离线\",\n            value: 0,\n        },\n    ],\n};\n\n// 表格\nconst table = [{ id: 1 }];\n// 翻页\nconst pagination = reactive({\n    page: 1,\n    per: 1,\n    total: 0,\n});\n\n// 搜索查询\nfunction toSearch(e) {\n    console.log(e, \"设备\");\n}\n\n// 打开弹窗\nfunction onToDialog({ id }) {\n    dialogObject.dialogVisible = true;\n    id;\n}\n\nconst dialogObject = reactive({\n    dialogVisible: false,\n});\n// 关闭弹窗\nconst onDialogClose = () => {\n    dialogObject.dialogVisible = false;\n};\n// 确定\nconst onDialogSuccess = () => {\n    dialogObject.dialogVisible = false;\n};\n\nfunction addEquipment() {\n    dialogObject.dialogVisible = true;\n}\n</script>\n","import script from \"./EquipmentList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EquipmentList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["handelClick","id","emit","__exports__","emits","dialogShow","computed","get","props","dialogObject","dialogVisible","set","val","obj","dialogTitle","title","dialogWidth","width","dialogCloseBtnText","closeBtnText","dialogSuccessBtnText","successBtnText","dialogIsFooter","isFooter","dialogContent","content","form","reactive","name","user","close","success","store","deepBerryStore","label","deepBerry","icon","equipment_data","uid","placeholder","bind_title","bind","value","connect_title","connect","table","pagination","page","per","total","toSearch","e","console","log","onToDialog","onDialogClose","onDialogSuccess","addEquipment"],"sourceRoot":""}